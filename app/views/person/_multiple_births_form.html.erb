<script>
    (function($){
        $.fn.serializeHash = function() {
            var hash = {}

            function stringKey(key, value) {
                var beginBracket = key.lastIndexOf('[');
                if (beginBracket == -1) {
                    var hash = {};
                    hash[key] = value;
                    return hash;
                }
                var newKey = key.substr(0, beginBracket);
                var newValue = {};
                newValue[key.substring(beginBracket + 1, key.length - 1)] = value;
                return stringKey(newKey, newValue);
            }

            var els = $(this).find(':input').get();
            $.each(els, function() {
                if (this.name && !this.disabled && (this.checked || /select|textarea/i.test(this.nodeName) || /hidden|text|search|tel|url|email|password|datetime|date|month|week|time|datetime-local|number|range|color/i.test(this.type))) {
                    var val = $(this).val();
                    $.extend(true, hash, stringKey(this.name, val));
                }
            });
            return hash;
        };
    })(jQuery);
</script>

<link href="/Pikaday/css/pikaday.css" rel="stylesheet">

<style>
    label{
        margin-left: 20px;
        margin-right: 10px;
        min-width: 100px;
        text-align: left;
    }

    input, select{
        width: 200px;
        background: lightblue;
        font-weight: bold;
        padding: 5px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        -ms-box-sizing:content-box;
        -moz-box-sizing:content-box;
        -webkit-box-sizing:content-box;
        box-sizing:content-box;
    }

    .row{
        margin-bottom: 10px;
    }
    fieldset .form-error{
        display: none;
    }
    fieldset{
        min-height: 50vh;
    }

    #completeness_details tr{
        border-top: 1px dotted lightgray
    }

    .labell{
        text-align: left;
        font-weight: bold !important;
        padding: 0px;
    }
    .modal-header{
        background: #006f95 none repeat scroll 0 0;
        padding: 12px;
    }
    #completeness_details td{
        padding: 8px;
        border: 1px dotted ghostwhite;
    }
    #completeness_details .labell{
    }
    #mother_id_number, #father_id_number, #informant_id_number{
        text-transform: uppercase;
    }

    .sentence-case, .cap{
        text-transform: capitalize;
    }

    .edit{
        text-decoration: underline;
        cursor: pointer;
    }

</style>
<script src="/js/jquery.form-validator.min.js"></script>

<form enctype="multipart/form-data" id="form-create-person" accept-charset="UTF-8"
      action="/save_record" method="POST"><input type="hidden" >

  <%= hidden_field_tag :authenticity_token, form_authenticity_token -%>
  <%= hidden_field_tag :person_id, @person.person_id -%>

  <div id="progress-div" style="height: 3px;background: #003366;width: 2%;">&nbsp;</div>

  <fieldset id="registration">
    <legend>REGISTRATION TYPE</legend>

    <div data-row-span="2" class="row">

      <div data-field-span="1" class="form-inline col-lg-3">
        <label>Type of Registration: <span style="color: red; ">*</span></label>
        <div>
          <label for="registration_type"></label>
          <select id="registration_type" name="registration_type" data-validation="required">
            <option selected>Normal</option>
            <!--
            <option>Abandoned</option>
            <option>Adopted</option>
            <option>Orphaned</option>
          -->
          </select>
        </div>
      </div>
    </div>

  </fieldset>

  <fieldset id="child" style="display: none">
    <legend>DETAILS OF CHILD <span id="multiple_births_badge"></span></legend>
    <div data-row-span="2" class="row">
      <div data-field-span="1" class="form-inline col-lg-3">
        <label>Surname: <span style="color: red; ">*</span></label>
        <input id="last_name" class="sentence-case" type="text" list="surname_list" autocomplete="off" pattern=""
               value="<%=@person.last_name%>" name="last_name" data-validation="required length" data-validation-length="2-55">
        <datalist id="surname_list">

        </datalist>

      </div>
      <div data-field-span="1" class="form-inline col-lg-3">
        <label>First Name: <span style="color: red; ">*</span></label>
        <input id="first_name" type="text"  class="sentence-case" list="first_name_list" autocomplete="off"
               value="<%=@person.first_name%>" name="first_name" data-validation="required length" data-validation-length="2-55">
        <datalist id="first_name_list">

        </datalist>

      </div>
      <div data-field-span="1" class="form-inline col-lg-3">
        <label>Other Names:</label>
        <input id="middle_name"  class="sentence-case" type="text" name="middle_name" value="<%=@person.middle_name%>" list="middle_name_list"
               autocomplete="off">
        <datalist id="middle_name_list">

        </datalist>
      </div>
    </div>

    <div data-row-span="2" class="row">

<!--      <div data-field-span="1" class="form-inline col-lg-3">-->
<!--        <label>Date of Birth: <span style="color: red; ">*</span></label>-->
<!--        <input id="date_of_birth" type="text" name="date_of_birth" value="<%#= session[:temp_person_details]['date_of_birth'] rescue nil%>"-->
<!--               class="datepicker" data-validation="required" data-validation-require-leading-zero="false" data-validation-format="dd/mm/yyyy">-->
<!--      </div>-->

      <div data-field-span="1" class="form-inline col-lg-3">
        <label>Sex: <span style="color: red; ">*</span></label>
        <div>
          <select id="gender" name="gender" data-validation="required">
            <option></option>
            <option>Male</option>
            <option>Female</option>
          </select>
        </div>
      </div>

      <div data-field-span="1" class="form-inline col-lg-3">
        <label for="birth_weight">Birth Weight:</label>
        <input id="birth_weight" type="text" name="birth_weight" data-validation-length="0-4" >
      </div>

    </div>

  </fieldset>

  <div class="form-group actions-row" style="width: 100%;padding-right: 45%;">
    <button style="display: none" id="finish-btn" type="button" onclick="validateForm()" class="btn btn-primary"><span class="glyphicon glyphicon-save"></span> Finish </button>

    <button type="button" class="btn btn-danger" style="margin-left: 10px;" onclick="window.location = '/person/index?active_tab=person'; " ><b>Cancel</b></button>
  </div>

  <div class="modal fade" id="completenessModal" tabindex="-1" role="dialog" aria-labelledby="completenessModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          <h4 class="modal-title" id="printerModalLabel" style="text-align: left; color: white; font-weight: bold; text-align: center;">
            Check Completeness
          </h4>
        </div>
        <div class="modal-body">
        <span style="text-align:center;">
          <table align="center" id="completeness_details">

            <tr>
              <td class="labell">Child Name</td>
              <td style="text-align: left; padding-left:50px;" id="child_name" class="edit 0 cap"></td>
            </tr>
            <tr>
              <td class="labell">Child Gender</td>
              <td style="text-align: left; padding-left:50px;" id="child_gender" class="edit 0">&nbsp;</td>
            </tr>
            <tr>
              <td class="labell">Child Date of Birth</td>
              <td style="text-align: left; padding-left:50px;" id="child_date_of_birth" class="edit 0">&nbsp;</td>
            </tr>
          </table>
        </span>

          <div class="modal-footer">
            <button type="button submit" class="btn btn-primary" onmousedown="saveRecord()"><b>Save Record</b></button>
            <button type="button" class="btn btn-warning" data-dismiss="modal"><b>Keep Editing</b></button>

          </div>

        </div>
      </div>
    </div>
  </div>


</form>

<script src="/Pikaday/moment.js"></script>
<script src="/Pikaday/pikaday.js"></script>

<script>
    function __$(id){
        return document.getElementById(id);
    }


    var sets = document.getElementsByTagName("fieldset");
    var cur_pos = 0;

    let multiple_births = "<%= session[:multiple_births] %>"

    const multiple_births_value = "<%= session[:multiple_births_value] %>"

    const number_of_child = "<%= session[:number_of_child] %>"

    if (multiple_births) {
        for (var loop=0; loop<= parseInt(multiple_births_value); loop++) {
            __$('multiple_births_badge').innerHTML = '(' + number_of_child + ' of ' + multiple_births_value + ')';
        }

        jQuery('.form-error').hide();
        if (cur_pos < sets.length - 1) {
            for (var count = 0; count < sets.length; count++) {
                sets[count].style.display = "none";
            }
            cur_pos += 1;
            sets[cur_pos].style.display = "block";
            jQuery("#back-btn").hide();
            jQuery("#next-btn").hide();
            jQuery("#finish-btn").show();
        }

    }

    $.validate({
        validateOnBlur : true,
        showHelpOnFocus : true,
        addSuggestions : true,
        errorMessagePosition : 'top',
        scrollToTopOnError : false,
        onError : function(){
            alert("Could not validate some input elements");
        }
    });

    function removeSpace(node){
        node.value = node.value.trim().replace(/\s+/g, "").match(/\d/g).join("");

    }

    function validateForm(){

        let hash = jQuery("#form-create-person").serializeHash();
        for(let k in hash){
            if (hash[k] == null){
                hash[k] = "";
            }
        }

        $("#completeness_details #child_name").html(hash['first_name'] + " " + hash['middle_name'] + " " + hash["last_name"]);
        $("#completeness_details #child_gender").html(hash['gender']);
        $("#completeness_details #child_date_of_birth").html(hash['date_of_birth']);

        jQuery('#completenessModal').modal('show');
    }

    function saveRecord(){

        jQuery.ajax(
            {
                url: "/save_record",
                type: "POST",
                data: $("#form-create-person").serialize(),
                success: function(response){
                    if (response === "OK") {
                        window.location = "/person/index?active_tab=home";
                    } else if (response === "Redirect") {
                        window.location = "/person/new?multiple_births=<%= session[:multiple_births_value] %>&number_of_child=<%= session[:number_of_child] %>"
                    } else{
                        alert("Oops!!! Something Went Wrong!!")
                    }
                },
                error: function(){
                    alert("Oops!!! Something Went Wrong!!");
                }
            }
        );
        //})
    }

    <% if request.path.match("/edit")
    %>

    __$("gender").value = "<%= @person.gender%>";
    <% else %>

    <% end %>

    var dobpicker;

    jQuery(document).ready(function(){
        var d = new Date();
        d.setFullYear(d.getFullYear() - 16);

        dobpicker = new Pikaday({
            field: document.getElementById('date_of_birth'),
            format: 'DD/MMM/YYYY',
            minDate: d,
            maxDate: new Date()
        } );
    })

    $("select option").css("background-color","red");


    $("input").on('input', function(){
        var list_id = $(this).attr("list");
        if (list_id && list_id.length > 0){
            console.log(list_id)
            jQuery.ajax(
                {
                    url: "/person/suggest?field=" + this.id + "&search_value=" + this.value,
                    success: function (data) {
                        jQuery("#" + list_id).empty();
                        data = data;
                        for (var i = 0; i < data.length; i++) {
                            var opt = document.createElement("option");
                            opt.innerHTML = data[i];
                            __$(list_id).appendChild(opt);
                        }
                    }
                }
            )
        }
    })

    function loadData(data){
        var row = document.createElement('tr');
        __$('tbody').appendChild(row);
        var td = document.createElement('td');
        td.className = 'table-cell'
        td.style.textAlign = 'center';
        td.innerHTML = data['ben'];
        row.appendChild(td);

        var td = document.createElement('td');
        td.className = 'table-cell'
        td.style.textAlign = 'center';
        td.innerHTML = data['name'];
        row.appendChild(td);

        var td = document.createElement('td');
        td.className = 'table-cell'
        td.style.textAlign = 'center';
        td.innerHTML = data['dob'];
        row.appendChild(td);

        var td = document.createElement('td');
        td.className = 'table-cell'
        td.style.textAlign = 'center';
        td.innerHTML = data['gender'];
        row.appendChild(td);

        var td = document.createElement('td');
        td.className = 'table-cell'
        td.style.textAlign = 'center';
        td.innerHTML = data['mother_name'];
        row.appendChild(td);

        var td = document.createElement('td');
        td.className = 'table-cell'
        td.style.textAlign = 'center';
        td.innerHTML = data['father_name'];
        row.appendChild(td);

        var td = document.createElement('td');
        td.className = 'table-cell'
        td.style.textAlign = 'center';
        td.innerHTML = data['status'];
        row.appendChild(td);
    }

    function capitalize(string){
        string = string.replace(/\_/g, ' ');
        return string.charAt(0).toUpperCase() + string.slice(1);
    }

    // TODO: Make clear Multiple Birth Workflow intelligent when cancelling before finishing all births
    function clearMultipleBirths() {
      multiple_births = false;
        <%#
          session.delete(:multiple_births)
          session.delete(:multiple_births_value)
          session.delete(:number_of_child)
          session.delete(:temp_person_details)
      %>
    }
</script>
